import { toast } from 'sonner'
import { logError, getErrorMessage } from './utils'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
function isUserAdmin(): boolean {
  if (typeof window === 'undefined') return false
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ
  try {
    const adminStatus = localStorage.getItem('isAdmin')
    return adminStatus === 'true'
  } catch {
    return false
  }
}

// –¢–∏–ø—ã –æ—à–∏–±–æ–∫
export interface AppError extends Error {
  code?: string
  statusCode?: number
  context?: Record<string, any>
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –æ—à–∏–±–∫–∏
export function createError(
  message: string,
  code?: string,
  statusCode?: number,
  context?: Record<string, any>
): AppError {
  const error = new Error(message) as AppError
  error.code = code
  error.statusCode = statusCode
  error.context = context
  return error
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏
function extractDetailedErrorMessage(error: any): string | null {
  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
  const errorSources = [
    error?.error?.message,
    error?.error,
    error?.message,
    error?.response?.data?.error?.message,
    error?.response?.data?.error,
    error?.response?.data?.message,
    error?.response?.statusText,
    error?.statusText,
    error?.toString?.()
  ]

  for (const source of errorSources) {
    if (source && typeof source === 'string' && source.trim()) {
      return source.trim()
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫
  if (error?.code) {
    const errorCodeMessages: Record<string, string> = {
      'invalid_api_key': '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API –∫–ª—é—á',
      'account_deactivated': '–ê–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',
      'insufficient_quota': '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–≤–æ—Ç—ã',
      'rate_limit_exceeded': '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤',
      'model_not_found': '–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
      'context_length_exceeded': '–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'
    }
    
    if (errorCodeMessages[error.code]) {
      return errorCodeMessages[error.code]
    }
  }

  return null
}

function extractProviderInfo(error: any): string | null {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const providerSources = [
    error?.provider,
    error?.config?.provider,
    error?.response?.headers?.['x-provider'],
    error?.response?.config?.provider,
    error?.request?.provider
  ]

  for (const source of providerSources) {
    if (source && typeof source === 'string') {
      return source
    }
  }

  // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –ø–æ URL
  const url = error?.config?.url || error?.response?.config?.url || error?.request?.url
  if (url && typeof url === 'string') {
    if (url.includes('openai')) return 'OpenAI'
    if (url.includes('anthropic')) return 'Anthropic'
    if (url.includes('groq')) return 'Groq'
    if (url.includes('huggingface')) return 'Hugging Face'
    if (url.includes('cohere')) return 'Cohere'
    if (url.includes('google')) return 'Google'
    if (url.includes('deepseek')) return 'DeepSeek'
  }

  return null
}

function extractErrorContext(error: any): string | null {
  const contextInfo = []

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
  const model = error?.model || error?.config?.model || error?.response?.config?.model
  if (model) {
    contextInfo.push(`–ú–æ–¥–µ–ª—å: ${model}`)
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
  const requestId = error?.response?.headers?.['x-request-id'] || error?.requestId
  if (requestId) {
    contextInfo.push(`ID –∑–∞–ø—Ä–æ—Å–∞: ${requestId}`)
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö
  const rateLimitInfo = extractRateLimitInfo(error)
  if (rateLimitInfo) {
    contextInfo.push(rateLimitInfo)
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
  if (error?.response?.status === 429) {
    contextInfo.push('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
  }

  if (error?.response?.status === 401) {
    contextInfo.push('–ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á')
  }

  if (error?.response?.status === 403) {
    contextInfo.push('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞')
  }

  return contextInfo.length > 0 ? contextInfo.join('\n') : null
}

function extractRateLimitInfo(error: any): string | null {
  const headers = error?.response?.headers
  if (!headers) return null

  const rateLimitInfo = []
  
  if (headers['x-ratelimit-remaining']) {
    rateLimitInfo.push(`–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤: ${headers['x-ratelimit-remaining']}`)
  }
  
  if (headers['x-ratelimit-reset']) {
    const resetTime = new Date(parseInt(headers['x-ratelimit-reset']) * 1000)
    rateLimitInfo.push(`–°–±—Ä–æ—Å –ª–∏–º–∏—Ç–∞: ${resetTime.toLocaleTimeString('ru-RU')}`)
  }
  
  if (headers['retry-after']) {
    rateLimitInfo.push(`–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑: ${headers['retry-after']} —Å–µ–∫`)
  }

  return rateLimitInfo.length > 0 ? rateLimitInfo.join(', ') : null
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API
export function handleApiError(error: any, context?: string): string {
  let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞'
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  const detailedMessage = extractDetailedErrorMessage(error)
  
  if (error?.response) {
    // –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    const status = error.response.status
    const data = error.response.data
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å, –∏–Ω–∞—á–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ
    switch (status) {
      case 400:
        errorMessage = detailedMessage || data?.error || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞'
        break
      case 401:
        errorMessage = detailedMessage || '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'
        break
      case 402:
        errorMessage = detailedMessage || '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤'
        break
      case 403:
        errorMessage = detailedMessage || '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω'
        break
      case 404:
        errorMessage = detailedMessage || '–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        break
      case 429:
        errorMessage = detailedMessage || '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
        break
      case 500:
        errorMessage = detailedMessage || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
        break
      default:
        errorMessage = detailedMessage || data?.error || `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (${status})`
    }
  } else if (error?.request) {
    // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏
    errorMessage = detailedMessage || '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É'
  } else {
    // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
    errorMessage = detailedMessage || getErrorMessage(error)
  }
  
  logError(error, context)
  return errorMessage
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
export function handleErrorWithToast(
  error: any,
  context?: string,
  customMessage?: string
): void {
  const errorMessage = customMessage || handleApiError(error, context)
  const isAdmin = isUserAdmin()
  
  // –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
  if (isAdmin) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    const originalError = extractDetailedErrorMessage(error)
    
    const errorDetails = {
      message: errorMessage,
      originalError: originalError,
      status: error?.response?.status || error?.status,
      statusText: error?.response?.statusText || error?.statusText,
      url: error?.config?.url || error?.request?.responseURL,
      method: error?.config?.method?.toUpperCase() || error?.request?.method,
      context: context,
      timestamp: new Date().toISOString(),
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
      errorCode: error?.code,
      errorType: error?.name || error?.constructor?.name
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ
    const mainErrorMessage = originalError || errorMessage
    let adminMessage = `üö® –û—à–∏–±–∫–∞: ${mainErrorMessage}`
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ
    if (originalError && originalError !== errorMessage && errorMessage !== '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞') {
      adminMessage += `\n\nüìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n${errorMessage}`
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    const providerInfo = extractProviderInfo(error)
    if (providerInfo) {
      adminMessage += `\n\nüîå –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${providerInfo}`
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    const errorContext = extractErrorContext(error)
    if (errorContext) {
      adminMessage += `\n\nüí° –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:\n${errorContext}`
    }
    
    adminMessage += `\n\nüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:\n` +
      `‚Ä¢ –°—Ç–∞—Ç—É—Å: ${errorDetails.status || 'N/A'}\n` +
      `‚Ä¢ –¢–∏–ø: ${errorDetails.errorType || 'N/A'}\n` +
      `‚Ä¢ –ö–æ–¥: ${errorDetails.errorCode || 'N/A'}\n` +
      `‚Ä¢ URL: ${errorDetails.url || 'N/A'}\n` +
      `‚Ä¢ –ú–µ—Ç–æ–¥: ${errorDetails.method || 'N/A'}\n` +
      `‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${errorDetails.context || 'N/A'}\n` +
      `‚Ä¢ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`
    
    toast.error(adminMessage, {
      duration: 15000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
      style: {
        maxWidth: '600px',
        whiteSpace: 'pre-line',
        fontSize: '13px'
      }
    })
  } else {
    toast.error(errorMessage)
  }
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  if (typeof window !== 'undefined' && (window as any).posthog) {
    (window as any).posthog.capture('error_occurred', {
      error: getErrorMessage(error),
      context,
      stack: error?.stack,
      url: window.location.href,
      isAdmin
    })
  }
}

// Wrapper –¥–ª—è async —Ñ—É–Ω–∫—Ü–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
export function withErrorHandling<T extends any[], R>(
  fn: (...args: T) => Promise<R>,
  context?: string,
  showToast = true
) {
  return async (...args: T): Promise<R | null> => {
    try {
      return await fn(...args)
    } catch (error) {
      if (showToast) {
        handleErrorWithToast(error, context)
      } else {
        logError(error, context)
      }
      return null
    }
  }
}

// Retry —Ñ—É–Ω–∫—Ü–∏—è —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
export async function retryWithBackoff<T>(
  fn: () => Promise<T>,
  maxRetries = 3,
  baseDelay = 1000,
  context?: string
): Promise<T> {
  let lastError: any
  
  for (let attempt = 0; attempt <= maxRetries; attempt++) {
    try {
      return await fn()
    } catch (error) {
      lastError = error
      
      if (attempt === maxRetries) {
        logError(error, `${context} - Final attempt failed`)
        throw error
      }
      
      const delay = baseDelay * Math.pow(2, attempt)
      logError(error, `${context} - Attempt ${attempt + 1} failed, retrying in ${delay}ms`)
      
      await new Promise(resolve => setTimeout(resolve, delay))
    }
  }
  
  throw lastError
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º
export function handleFormError(
  error: any,
  setError?: (field: string, error: { message: string }) => void
): void {
  if (error?.response?.data?.errors) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const errors = error.response.data.errors
    Object.keys(errors).forEach(field => {
      if (setError) {
        setError(field, { message: errors[field][0] })
      }
    })
  } else {
    handleErrorWithToast(error, 'Form submission')
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
export async function checkServiceHealth(): Promise<boolean> {
  try {
    const response = await fetch('/api/health')
    return response.ok
  } catch (error) {
    logError(error, 'Health check failed')
    return false
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
export function handleFileUploadError(error: any): string {
  if (error?.response?.status === 413) {
    return '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB'
  }
  
  if (error?.response?.status === 415) {
    return '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞'
  }
  
  return handleApiError(error, 'File upload')
}

// –¢–∏–ø—ã –¥–ª—è TypeScript
export type ErrorHandler = (error: any, context?: string) => void
export type AsyncErrorHandler<T> = (error: any, context?: string) => Promise<T | null>

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–æ–¥–æ–≤ –æ—à–∏–±–æ–∫
export const ERROR_CODES = {
  UNAUTHORIZED: 'UNAUTHORIZED',
  INSUFFICIENT_CREDITS: 'INSUFFICIENT_CREDITS',
  RATE_LIMITED: 'RATE_LIMITED',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  NETWORK_ERROR: 'NETWORK_ERROR',
  SERVER_ERROR: 'SERVER_ERROR',
  FILE_TOO_LARGE: 'FILE_TOO_LARGE',
  UNSUPPORTED_FILE_TYPE: 'UNSUPPORTED_FILE_TYPE',
} as const

export type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES]